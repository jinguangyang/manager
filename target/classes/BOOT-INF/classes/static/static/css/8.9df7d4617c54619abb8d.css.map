{"version":3,"sources":["D:/项目管理/售货机/web/web/src/components/table/D:/项目管理/售货机/web/web/src/components/table/D:/项目管理/售货机/web/web/src/components/table/w-table.vue","D:/项目管理/售货机/web/web/src/components/table/D:/项目管理/售货机/web/web/src/components/table/src/components/table/w-table.vue","D:/项目管理/售货机/web/web/src/views/pointposition/line/D:/项目管理/售货机/web/web/src/views/pointposition/line/src/views/pointposition/line/line.vue"],"names":[],"mappings":"AAyME,iBAGG,ACRL,sBACA,wBAAA,CACA,ADGE,gCAEG,kCAAoC,CACpC,AAHH,sBAKI,SAAU,CAsBb,AA3BD,+BAOM,eAAe,AACf,cAAc,AACd,QAAQ,AACR,SAAS,AACT,kBAAkB,AAClB,gBAAgB,AAChB,WAAY,CACb,AAdL,gDAiBM,4BAA4B,AAC5B,UAAW,CACZ,AAnBL,iDAuBM,6BAA6B,AACrC,UAAW,CACJ,AAzBL,qBA6BE,UAAU,AACV,2BAAoB,AAApB,oBAAoB,AACpB,0BAAsB,AAAtB,sBAAsB,AACtB,oBAAiB,AAAjB,iBAAiB,AACjB,eAAe,AACf,gBAAiB,CASlB,AA3CD,4BAoCI,WAAW,AACX,kBAAkB,AAClB,MAAM,AACN,OAAO,AACP,SAAS,AACT,OAAQ,CACT,AA1CH,iDA8CI,qBAAuB,CACxB,AA/CH,yCAiDI,kBAAmB,CACpB,AECL,2BAAA,cAAA,CAAA,AACA,0BAAA,gBAAA,cAAA,CAAA","file":"8.9df7d4617c54619abb8d.css","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  .w-table {\n  　.el-table .darg_start {\n     background-color: #f3f3f3 !important; \n    }\n    .el-table th {\n      padding: 0;\n      .virtual{\n        position: fixed;\n        display: block;\n        width: 0;\n        height: 0;\n        margin-left: -10px;\n        background: none;\n        border: none;\n      }\n    &.darg_active_left {\n      .virtual {\n        border-left: 2px dotted #666;\n        z-index: 99;\n      }\n    }\n    &.darg_active_right {\n      .virtual {\n        border-right: 2px dotted #666;\nz-index: 99;\n      }\n    }\n  }\n  .thead-cell {\n    padding: 0;\n    display: inline-flex;\n    flex-direction: column;\n    align-items: left;\n    cursor: pointer;\n    overflow: initial;\n    &:before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n    }\n  }\n  &.w-table_moving {\n    .el-table th .thead-cell{\n      cursor: move !important;\n    }\n    .el-table__fixed {\n      cursor: not-allowed;\n    }\n  }\n}\n","      <template>\n       <div class=\"w-table\" :class=\"{'w-table_moving': dragState.dragging}\">\n       <el-table :data=\"data\"\n            :border=\"option.border\"\n            :height=\"option.height\"\n            :max-height=\"option.maxHeight\"\n            :style=\"{ width: parseInt(option.width)+'px' }\"\n            :cell-class-name=\"cellClassName\" \n            :header-cell-class-name=\"headerCellClassName\"\n            :tooltip-effect=\"tooltipEffect\"\n            @row-click=\"clciks\"\n            @selection-change=\"handleSelectionChange\"\n            :header-cell-style=\"getRowClass\"\n          >\n            <slot name=\"fixed\"></slot>\n            <el-table-column v-for=\"(col, index) in tableHeader\" :key=\"index\"\n              :prop=\"col.prop\"\n              :label=\"col.label\"\n              :width=\"col.width\"\n              :min-width=\"col.minWidth\"\n              :type=\"col.type\"\n              :header-align=\"col.headerAlign\"\n              :column-key=\"index.toString()\"\n              :render-header=\"renderHeader\"\n              :show-overflow-tooltip=\"true\"\n\n            >\n            </el-table-column>\n          </el-table>\n        </div>\n        </template>\n<script>\nexport default {\n  watch: {\n    header (val, oldVal) {\n      this.tableHeader = val\n    }\n  },\n  props: {\n    data: {\n      default: function () {\n        return []\n      },\n      type: Array\n    },\n    header: {\n      default: function () {\n        return []\n      },\n      type: Array\n    },\n    option: {\n      default: function () {\n        return {}\n      },\n      type: Object\n    },\n    clciks: {\n      default: function(res) {\n        return {\n          res: ''\n        }\n      },\n      type : Function\n    },\n    handleSelectionChange:{\n       default: function(res) {\n        return {\n          res: ''\n        }\n      },\n      type : Function\n    }\n\n  },\n  methods: {\n    getRowClass({ row, column, rowIndex, columnIndex }) {\n        if (rowIndex == 0) {\n          return 'background:#F5F8FB'\n        } else {\n          return ''\n        }\n    },\n    filterNode(value, data) {\n      if (!value) return true\n      return data.label.indexOf(value) !== -1\n    },\n    renderHeader (createElement, {column}) {\n      return createElement(\n        'div', {\n          'class': ['thead-cell'],\n          on: {\n            mousedown: ($event) => { this.handleMouseDown($event, column) },\n            mousemove: ($event) => { this.handleMouseMove($event, column) }\n          }\n        }, [\n          // 添加 <a> 用于显示表头 label\n          createElement('a', column.label),\n          // 添加一个空标签用于显示拖动动画\n          createElement('span', {\n            'class': ['virtual']\n          })\n        ])\n    },\n    // 按下鼠标开始拖动\n    handleMouseDown (e, column) {\n      this.dragState.dragging = true\n      this.dragState.start = parseInt(column.columnKey)\n      // 给拖动时的虚拟容器添加宽高\n      let table = document.getElementsByClassName('w-table')[0]\n      let virtual = document.getElementsByClassName('virtual')\n      for (let item of virtual) {\n        item.style.height = table.clientHeight - 1 + 'px'\n        item.style.width = item.parentElement.parentElement.clientWidth + 'px'\n      }\n    　document.addEventListener('mouseup', this.handleMouseUp);\n    },\n\n    // 鼠标放开结束拖动\n    handleMouseUp () {\n      this.dragColumn(this.dragState)\n      // 初始化拖动状态\n      this.dragState = {\n        start: -10,\n        end: -10,\n        dragging: false,\n        direction: undefined\n      }\n    　document.removeEventListener('mouseup', this.handleMouseUp);\n    },\n\n    // 拖动中\n    handleMouseMove (e, column) {\n      if (this.dragState.dragging) {\n        let index = parseInt(column.columnKey) // 记录起始列\n        if (index - this.dragState.start !== 0) {\n          this.dragState.direction = index - this.dragState.start < 0 ? 'left' : 'right' // 判断拖动方向\n          this.dragState.end = parseInt(column.columnKey)\n        } else {\n          this.dragState.direction = undefined\n        }\n      } else {\n        return false\n      }\n    },\n\n    // 拖动易位\n    dragColumn ({start, end, direction}) {\n      let tempData = []\n      let left = direction === 'left'\n      let min = left ? end : start - 1\n      let max = left ? start + 1 : end\n      for (let i = 0; i < this.tableHeader.length; i++) {\n        if (i === end) {\n          tempData.push(this.tableHeader[start])\n        } else if (i > min && i < max) {\n          tempData.push(this.tableHeader[ left ? i - 1 : i + 1 ])\n        } else {\n          tempData.push(this.tableHeader[i])\n        }\n      }\n      this.tableHeader = tempData\n    },\n\n    headerCellClassName ({column,columnIndex},any) {\n        let active = columnIndex - 0 === this.dragState.end ? `darg_active_${this.dragState.direction}` : ''\n        let start = columnIndex - 0 === this.dragState.start ? `darg_start` : ''\n        return `${active} ${start}`\n    },\n\n    cellClassName ({column,columnIndex},any) {\n        return (columnIndex - 0 === this.dragState.start ? `darg_start` : '')\n    }\n  },\n  data() {\n    return {\n      tooltipEffect:\"dark\",\n      tableHeader: this.header,\n      dragState: {\n        start: -9, // 起始元素的 index\n        end: -9, // 移动鼠标时所覆盖的元素 index\n        dragging: false, // 是否正在拖动\n        direction: undefined // 拖动方向\n      },\n      filterText: ''\n    }\n  },\n  created:function(){\n\n    \n  },\n  mounted () {\n  }\n}\n</script>\n<style>\n   .el-table .darg_start {\n     background-color: #f3f3f3; \n    }\n</style>\n<style  lang=\"scss\">\n  .w-table {\n  　.el-table .darg_start {\n     background-color: #f3f3f3 !important; \n    }\n    .el-table th {\n      padding: 0;\n      .virtual{\n        position: fixed;\n        display: block;\n        width: 0;\n        height: 0;\n        margin-left: -10px;\n        background: none;\n        border: none;\n      }\n    &.darg_active_left {\n      .virtual {\n        border-left: 2px dotted #666;\n        z-index: 99;\n      }\n    }\n    &.darg_active_right {\n      .virtual {\n        border-right: 2px dotted #666;\nz-index: 99;\n      }\n    }\n  }\n  .thead-cell {\n    padding: 0;\n    display: inline-flex;\n    flex-direction: column;\n    align-items: left;\n    cursor: pointer;\n    overflow: initial;\n    &:before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n    }\n  }\n  &.w-table_moving {\n    .el-table th .thead-cell{\n      cursor: move !important;\n    }\n    .el-table__fixed {\n      cursor: not-allowed;\n    }\n  }\n}\n</style>","<template>\n <div class=\"div-warp\">\n        <el-dialog\n          title=\"查看线路详情\"\n          :visible.sync=\"dialogVisible\"\n          width=\"50%\"\n          >\n                 <el-form :model=\"editForm\"  class=\"formWidth\" >\n                    <el-form-item label=\"线路编号\" prop=\"code\" size=\"small\"  :label-width=\"formLabelWidth\">\n                      <el-input v-model=\"editForm.code\" auto-complete=\"off\" :disabled=\"true\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"线路名称\" prop=\"name\" size=\"small\" :label-width=\"formLabelWidth\">\n                      <el-input v-model=\"editForm.name\" auto-complete=\"off\" :disabled=\"true\"></el-input>\n                    </el-form-item>\n\n                    <el-form-item label=\"区域名称\" prop=\"districtId\" size=\"small\" :label-width=\"formLabelWidth\">\n                      <el-input v-model=\"editForm.districtName\" auto-complete=\"off\" :disabled=\"true\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"描述\"  size=\"small\" :label-width=\"formLabelWidth\">\n                      <el-input type=\"textarea\" v-model=\"editForm.description\" :disabled=\"true\"></el-input>\n                    </el-form-item>\n                  </el-form>\n      </el-dialog>\n      <div class=\"search-warp\">\n        <el-row :gutter=\"20\" >\n            <el-col :span=\"4\">\n              <div class=\"grid-content bg-purple\">\n                  <el-input\n                  placeholder=\"请输入线路\"\n                  v-model=\"keyword\"\n                  clearable>\n                </el-input>\n\n              </div>\n            </el-col>\n            <el-col :span=\"16\">\n                <div class=\"grid-content bg-purple\"> \n                  <el-button type=\"success\" @click.native.prevent=\"search\">查询</el-button>\n                  <el-button type=\"primary\" @click=\"handleAdd\">新增</el-button>\n                  <el-button type=\"danger\" @click=\"deleteRow\">删除</el-button>\n                </div>\n            </el-col>\n            <el-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></el-col>\n        </el-row>\n      </div>\n      <div class=\"block-warp\">\n      <wTable :data=\"tableData.slice((currentPage-1)*pagesize,currentPage*pagesize)\" :header=\"tableHeader\" :handleSelectionChange=\"handleSelectionChange\" :option=\"tableOption\">\n        <el-table-column slot=\"fixed\"\n          fixed=\"right\"\n          label=\"操作\"\n          width=\"150\">\n            <template  scope=\"scope\">\n              <div style=\"text-align:center;\">\n                <el-button type=\"success\" size=\"mini\" icon=\"el-icon-view\" circle @click=\"handdetails(scope.row)\"></el-button>\n                <el-button type=\"primary\" size=\"mini\"icon=\"el-icon-edit\" circle @click=\"handleEdit(scope.$index, scope.row)\"></el-button>\n                <el-button type=\"danger\"  size=\"mini\" icon=\"el-icon-delete\" circle @click.native.prevent=\"deleteRow(scope.row)\"></el-button>\n              </div>\n            </template>\n        </el-table-column>\n      </wTable>\n        \n      <div class=\"pageBox\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          background\n          stripe \n          :page-size=\"pagesize\"\n          layout=\"prev, pager, next\"\n          :total=\"total\">\n        </el-pagination>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { getLineList,delLine } from '@/api/pointposition'\nimport NProgress from 'nprogress'\nimport wTable from '@/components/table/w-table.vue'\nexport default {\n  data() {\n        return {\n          total:1,\n          currentPage:1, \n          pagesize:10, \n          formLabelWidth: '120px',\n          dialogVisible:false,\n          keyword:'',\n          multipleSelection:\"\",\n          tableOption:{\n            border: true\n          },\n          tableHeader: [\n              {\n                type:\"selection\",\n                width:\"55\"\n              },\n              {\n                prop: 'code',\n                label: '线路编号 ',\n                width: '78',\n                sortable: true,\n                sortMethod: this.handleNameSort\n              },\n              {\n                prop: 'name',\n                label: '线路名称',\n                 minWidth: '200'\n             \n              },\n              {\n                prop: 'districtName',\n                label: '区域名称',\n                minWidth: '120'\n              },\n              {\n                prop: 'description',\n                label: '描述'\n              },\n              {\n                prop: 'createTime',\n                label: '创建时间',\n                minWidth: '120'\n              }\n          ],\n          tableData: [],\n          filterText: '',\n          editForm:{}\n        }\n  },\n  watch: {\n    filterText(val) {\n      this.$refs.tree2.filter(val)\n    }\n  },\n  methods: {\n    handdetails(row){//查看\n      this.dialogVisible = true\n      this.editForm = Object.assign({}, row);\n    },\n     handleSizeChange: function (size) { \n   \n     this.pagesize = size; \n     }, \n     handleCurrentChange: function(currentPage){ \n\n     this.currentPage = currentPage;\n     this.getData(currentPage)\n     } ,\n    handleSelectionChange(rows) {//全选\n        const _this = this;\n        _this.multipleSelection = \"\"\n        if (rows) {\n          rows.forEach(row => {\n             _this.multipleSelection += row.logid+ \",\";\n      \n          });\n        } \n\n    },\n    search(){\n      this.getData(\"\")\n    },\n    deleteRow(row) {//删除数据\n      const _this  = this;\n      this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                  let para ={\n                    ids:_this.multipleSelection==\"\" ? row.logid : _this.multipleSelection\n                  }\n                  delLine(para).then((res) => {\n                        if(res.zhead.reTCode==\"0000\"){\n                        NProgress.done();\n                        this.$notify({\n                          title: '成功',\n                          message: res.zhead.retMsg,\n                          type: 'success'\n                        });\n                        _this.getData(\"\")\n                        //rows.splice(index, 1);\n                        }else{\n                          this.$notify({\n                            title: '失败',\n                            message: res.zhead.retMsg,\n                            type: 'error'\n                          });\n                  }\n              });\n\n          \n\n      });\n    },\n    handleAdd() {//显示新增窗口\n      this.$router.push(\n          {path:'/pointposition/line/add'}\n      );\n      //this.dialogAddTableVisible= true\n    },\n    handleEdit(index, row) {//显示编辑窗口{\n          if(window.localStorage){\n            localStorage.setItem(\"editData\",JSON.stringify(row) );\n          }else{\n\n          }\n          this.$router.push(\n              {path:'/pointposition/line/edit'}\n          );\n    // this.dialogEditTableVisible= true\n     this.editForm = Object.assign({}, row);\n    },\n    handleNameSort () {\n      console.log('handleNameSort')\n    },\n    getData(page) {\n      NProgress.start();\n      var _this = this;\n      this.listLoading = true\n      const listQuery = {\n        name:_this.keyword,\n        pageSize:page,\n        pageNum:'',\n        orderByColumn:'createTime',\n        isAsc:'asc'//desc\n      }\n      getLineList(listQuery).then(response => {\n\n         if(response.zhead.reTCode===\"0000\"){\n            NProgress.done();\n          _this.total = response.zbody.datas.total;  \n          _this.tableData = response.zbody.datas.rows;\n          console.log(_this.tableData)\n         }else{\n             this.$notify({\n              title: '失败',\n              message: res.zhead.retMsg,\n              type: 'error'\n            });\n         }\n       \n      })\n    }\n  },\n\n  mounted () {\n    this.getData(\"\")\n  },\n  components: {\n    wTable\n  }\n}\n</script>\n<style scoped>\n  .div-warp{padding:0 20px;}\n  .pageBox{background: #fff; padding:20px 0;}\n\n</style>"]}