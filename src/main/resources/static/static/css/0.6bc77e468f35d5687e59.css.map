{"version":3,"sources":["D:/项目管理/售货机/web/web/src/components/table/D:/项目管理/售货机/web/web/src/components/table/D:/项目管理/售货机/web/web/src/components/table/w-table.vue","D:/项目管理/售货机/web/web/src/components/charts/D:/项目管理/售货机/web/web/src/components/charts/src/components/charts/charts.vue","D:/项目管理/售货机/web/web/src/components/table/D:/项目管理/售货机/web/web/src/components/table/src/components/table/w-table.vue","D:/项目管理/售货机/web/web/src/views/dashboard/D:/项目管理/售货机/web/web/src/views/dashboard/D:/项目管理/售货机/web/web/src/views/dashboard/index.vue"],"names":[],"mappings":"AAyME,iBAGG,ACsFL,wBACA,kBAAA,AACA,aAAA,CAMA,ACtGA,sBACA,wBAAA,CACA,AFGE,gCAEG,kCAAoC,CACpC,AAHH,sBAKI,SAAU,CAsBb,AA3BD,+BAOM,eAAe,AACf,cAAc,AACd,QAAQ,AACR,SAAS,AACT,kBAAkB,AAClB,gBAAgB,AAChB,WAAY,CACb,AAdL,gDAiBM,4BAA4B,AAC5B,UAAW,CACZ,AAnBL,iDAuBM,6BAA6B,AACrC,UAAW,CACJ,AAzBL,qBA6BE,UAAU,AACV,2BAAoB,AAApB,oBAAoB,AACpB,0BAAsB,AAAtB,sBAAsB,AACtB,oBAAiB,AAAjB,iBAAiB,AACjB,eAAe,AACf,gBAAiB,CASlB,AA3CD,4BAoCI,WAAW,AACX,kBAAkB,AAClB,MAAM,AACN,OAAO,AACP,SAAS,AACT,OAAQ,CACT,AA1CH,iDA8CI,qBAAuB,CACxB,AA/CH,yCAiDI,kBAAmB,CACpB,AGqZL,sCAAqB,gBAAgB,CAAG,AACxC,8BAAa,kBAAiB,AAAE,YAAW,AAAE,SAAQ,AAAE,UAAU,CAAG,AACpE,0BAAS,kBAAiB,AAAE,WAAU,AAAE,SAAQ,AAAE,UAAU,CAAG,AAC/D,0BAAkD,23CAAiD,AAAE,oBAAoB,CAAoC,AAE7J,oDAFU,cAAa,AAAE,WAAU,AAAE,YAAW,AAA2E,WAAU,AAAE,mBAAmB,CAEG,AAA7J,0BAAkD,u8BAAiD,AAAE,oBAAoB,CAAoC,AAE7J,0BAAkD,u7CAAiD,AAAE,oBAAoB,CAAoC,AAE7J,oDAFU,cAAa,AAAE,WAAU,AAAE,YAAW,AAA2E,WAAU,AAAE,mBAAmB,CAEG,AAA7J,0BAAkD,2VAAiD,AAAE,oBAAoB,CAAoC,AAE7J,0BAAU,cAAa,AAAE,WAAU,AAAE,YAAW,AAAE,+yCAAiD,AAAE,qBAAoB,AAAE,WAAU,AAAE,mBAAmB,CAAG,AAG7J,2BAAW,kBAAkB,AAAE,8BAAgC,AAAG,kBAAiB,AAAE,gBAAe,AAAE,eAAc,AAAE,UAAS,AAAE,YAAW,AAAG,SAAS,CAAG,AAC3J,6BAAY,2BAA2B,CAAE,AACzC,sBAAK,gBAAe,AAAE,kBAAiB,AAAE,iBAAsB,AAAE,sCAA0C,CAAE,AAC7G,8BAAc,gBAAe,AAAE,kBAAiB,AAAE,4BAA6B,AAAC,6BAA8B,AAAE,eAAc,AAAE,iBAAgB,AAAE,WAAU,AAAE,gBAAkB,AAAE,iBAAiB,CAAI,AACvM,2BAAW,eAAe,CAAE,AAC5B,4BAAY,gBAAe,AAAE,UAAU,CAAG,AAC1C,0BAAS,kBAAiB,AAAE,WAAU,AAAE,kBAAiB,AAAE,cAAc,CAAG,AAC5E,kCAAiB,kBAAiB,AAAE,WAAU,AAAE,eAAc,AAAE,eAAe,CAAG,AAElF,4BAAW,kBAAiB,AAAE,WAAU,AAAE,eAAc,AAAE,gBAAe,AAAC,iiDAAuE,AAAE,yBAAwB,AAAE,mBAAmB,CAAI,AACpM,oCAAmB,kBAAiB,AAAE,WAAU,AAAE,eAAc,AAAE,eAAe,CAAG,AACpF,wBAAQ,cAAc,CAAI,AAExB,sCACE,WAAY,CACb,AACD,iCACE,eAAe,AACf,gBAAiB,CAClB","file":"0.6bc77e468f35d5687e59.css","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  .w-table {\n  　.el-table .darg_start {\n     background-color: #f3f3f3 !important; \n    }\n    .el-table th {\n      padding: 0;\n      .virtual{\n        position: fixed;\n        display: block;\n        width: 0;\n        height: 0;\n        margin-left: -10px;\n        background: none;\n        border: none;\n      }\n    &.darg_active_left {\n      .virtual {\n        border-left: 2px dotted #666;\n        z-index: 99;\n      }\n    }\n    &.darg_active_right {\n      .virtual {\n        border-right: 2px dotted #666;\nz-index: 99;\n      }\n    }\n  }\n  .thead-cell {\n    padding: 0;\n    display: inline-flex;\n    flex-direction: column;\n    align-items: left;\n    cursor: pointer;\n    overflow: initial;\n    &:before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n    }\n  }\n  &.w-table_moving {\n    .el-table th .thead-cell{\n      cursor: move !important;\n    }\n    .el-table__fixed {\n      cursor: not-allowed;\n    }\n  }\n}\n","<!-- 线性图表 -->\n<template>\n  <div :id=\"id\" class=\"chart\" :style=\"{height:chartHeight,width:chartWidth}\"></div>\n</template>\n\n<script>\nimport echarts from 'echarts';\nexport default {\n  name: \"line-chart\",\n  components: {},\n  data() {\n    return {\n      id: this.generatorOnlyId(),\n      chartHeight: \"300px\",\n      chartWidth: \"1000px\"\n    };\n  },\n  props: {\n    chartType: {\n      type: String,\n      default() {\n        // 图表类型 line/bar/pie\n        return \"line\";\n      }\n    },\n    titleText: {\n      type: String,\n      default() {\n        // 主标题\n        return \"title\";\n      }\n    },\n    subText: {\n      type: String,\n      default() {\n        // 次级标题\n        return \"sub-text\";\n      }\n    },\n    xText: {\n      type: String,\n      default() {\n        // 横轴文本\n        return \"x-text\";\n      }\n    },\n    yText: {\n      type: String,\n      default() {\n        // 纵轴文本\n        return \"y-text\";\n      }\n    },\n    chartData: {\n      type: Array,\n      default() {\n        // 图表数据\n        return [];\n      }\n    },\n    seriesData: {\n      type: Array,\n      default() {\n        // 图表数据\n        return [];\n      }\n    },\n    width: {\n      type: Number,\n      default: 0\n    },\n    height: {\n      type: Number,\n      default: 0\n    }\n  },\n  computed: {\n    xAxisData() {\n      return this.chartData.map(function(item) {\n        return item;\n      });\n    },\n    xAxisDataPie() {\n      return this.chartData.map(function(item) {\n        return item[0];\n      });\n    },\n    yAxisData() {\n      return this.chartData.map(function(item) {\n        return item[1];\n      });\n    },\n    seriesMap() {\n      return this.seriesData.map(function(item) {\n        return item;\n      });\n    }\n  },\n  methods: {\n    // 生成图表的唯一ID\n    generatorOnlyId() {\n      return (\n        this.$moment().format(\"YYYYMMDDHHmmssSSS\") +\n        Math.floor(Math.random() * 10000)\n      );\n    },\n    // 生成渲染图表div的宽度与高度\n    generatorWithAndHeight() {\n      this.chartWidth = `${\n        this.width ? this.width : document.body.offsetWidth * 0.8\n      }px`;\n      this.chartHeight = `${\n        this.height ? this.height : document.body.offsetHeight * 0.6\n      }px`;\n    },\n    // 绘制图表\n    drawChart() {\n      let chart = echarts.init(document.getElementById(this.id));\n      if (chart == undefined) {\n        console.error(`echarts init dom id ${this.id} failed`);\n        return;\n      }\n      switch (this.chartType) {\n        case \"line\":\n          chart.setOption(this.generatorLineOption());\n          break;\n        case \"bar\":\n          chart.setOption(this.generatorBarOption());\n          break;\n        case \"pie\":\n          chart.setOption(this.generatorPieOption());\n          break;\n        default:\n          console.error(`chartType ${this.chartType} is invalid`);\n          break;\n      }\n      let self = this;\n      let work = null;\n      window.addEventListener(\"resize\", function() {\n        self.generatorWithAndHeight();\n        if (work == null) {\n          work = setTimeout(function() {\n            chart.resize();\n            work = null;\n          }, 100);\n        }\n      });\n    },\n    generatorLineOption() {\n      return {\n        title: {\n          text: \"\", //this.titleText,\n          subtext: false,//this.subText,\n          x: \"center\"\n        },\n        legend: {\n        data:['销售额','销售量']\n        },\n        grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n        },\n         tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: \"line\" // 默认为直线，可选为：'line' | 'shadow'\n          }\n        },\n        xAxis: {\n          type: \"category\",\n          data: this.xAxisData\n        },\n        yAxis: {\n          type: \"value\"\n        },\n        series: this.seriesMap,\n      };\n    },\n    generatorBarOption() {\n      return {\n        title: {\n          text: \"\",//,this.titleText,\n          subtext: false,//this.subText,\n          x: \"center\"\n        },\n        color: [\"#3398DB\"],\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n          }\n        },\n        legend: {\n        data:['销售额','销售量','净利润']\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          containLabel: true\n        },\n        xAxis: [\n          {\n            type: \"category\",\n            data: this.xAxisData,\n            axisTick: {\n              alignWithLabel: true\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: \"value\"\n          }\n        ],\n        series:this.seriesMap\n        // series: [\n        //   {\n        //     name: this.yText,\n        //     type: \"bar\",\n        //     barWidth: \"40px\",\n        //     data: this.yAxisData\n        //   }\n        // ]\n      };\n    },\n    generatorPieOption() {\n      let pieData = [];\n      for (let index in this.xAxisDataPie) {\n        pieData.push({\n          value: this.yAxisData[index],\n          name: this.xAxisDataPie[index]\n        });\n      }\n      return {\n        title: {\n          text: \"\",//this.titleText,\n          subtext: false,//this.subText,\n          x: \"center\"\n        },\n        tooltip: {\n          trigger: \"item\",\n          formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n        },\n        legend: {\n          orient: \"vertical\",\n          x: 'right',\n          top:'50',\n          data: this.xAxisDataPie\n        },\n         grid: {\n          left: \"0%\",\n          right: \"0%\",\n          bottom: \"30%\",\n          containLabel: true\n        },\n        series: [\n          {\n            name: \"总占比\",\n            type: \"pie\",\n            radius: \"55%\",\n            center: [\"40%\", \"50%\"],\n            data: pieData,\n            itemStyle: {\n              emphasis: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: \"rgba(0, 0, 0, 0.5)\"\n              }\n            }\n          }\n        ]\n      };\n    }\n  },\n  watch: {},\n  mounted() {\n    this.drawChart();\n  },\n  created() {\n    this.generatorWithAndHeight();\n  }\n};\n</script>\n\n<style scoped>\n.chart {\n  text-align: center;\n  margin: 0 auto;\n  /* position: relative;\n  left: 50%;\n  margin-left: -45%;\n  box-shadow: 0 0 10px #726dd1;\n  border-radius: 10px; */\n}\n</style>","      <template>\n       <div class=\"w-table\" :class=\"{'w-table_moving': dragState.dragging}\">\n       <el-table :data=\"data\"\n            :border=\"option.border\"\n            :height=\"option.height\"\n            :max-height=\"option.maxHeight\"\n            :style=\"{ width: parseInt(option.width)+'px' }\"\n            :cell-class-name=\"cellClassName\" \n            :header-cell-class-name=\"headerCellClassName\"\n            :tooltip-effect=\"tooltipEffect\"\n            @row-click=\"clciks\"\n            @selection-change=\"handleSelectionChange\"\n            :header-cell-style=\"getRowClass\"\n          >\n            <slot name=\"fixed\"></slot>\n            <el-table-column v-for=\"(col, index) in tableHeader\" :key=\"index\"\n              :prop=\"col.prop\"\n              :label=\"col.label\"\n              :width=\"col.width\"\n              :min-width=\"col.minWidth\"\n              :type=\"col.type\"\n              :header-align=\"col.headerAlign\"\n              :column-key=\"index.toString()\"\n              :render-header=\"renderHeader\"\n              :show-overflow-tooltip=\"true\"\n\n            >\n            </el-table-column>\n          </el-table>\n        </div>\n        </template>\n<script>\nexport default {\n  watch: {\n    header (val, oldVal) {\n      this.tableHeader = val\n    }\n  },\n  props: {\n    data: {\n      default: function () {\n        return []\n      },\n      type: Array\n    },\n    header: {\n      default: function () {\n        return []\n      },\n      type: Array\n    },\n    option: {\n      default: function () {\n        return {}\n      },\n      type: Object\n    },\n    clciks: {\n      default: function(res) {\n        return {\n          res: ''\n        }\n      },\n      type : Function\n    },\n    handleSelectionChange:{\n       default: function(res) {\n        return {\n          res: ''\n        }\n      },\n      type : Function\n    }\n\n  },\n  methods: {\n    getRowClass({ row, column, rowIndex, columnIndex }) {\n        if (rowIndex == 0) {\n          return 'background:#F5F8FB'\n        } else {\n          return ''\n        }\n    },\n    filterNode(value, data) {\n      if (!value) return true\n      return data.label.indexOf(value) !== -1\n    },\n    renderHeader (createElement, {column}) {\n      return createElement(\n        'div', {\n          'class': ['thead-cell'],\n          on: {\n            mousedown: ($event) => { this.handleMouseDown($event, column) },\n            mousemove: ($event) => { this.handleMouseMove($event, column) }\n          }\n        }, [\n          // 添加 <a> 用于显示表头 label\n          createElement('a', column.label),\n          // 添加一个空标签用于显示拖动动画\n          createElement('span', {\n            'class': ['virtual']\n          })\n        ])\n    },\n    // 按下鼠标开始拖动\n    handleMouseDown (e, column) {\n      this.dragState.dragging = true\n      this.dragState.start = parseInt(column.columnKey)\n      // 给拖动时的虚拟容器添加宽高\n      let table = document.getElementsByClassName('w-table')[0]\n      let virtual = document.getElementsByClassName('virtual')\n      for (let item of virtual) {\n        item.style.height = table.clientHeight - 1 + 'px'\n        item.style.width = item.parentElement.parentElement.clientWidth + 'px'\n      }\n    　document.addEventListener('mouseup', this.handleMouseUp);\n    },\n\n    // 鼠标放开结束拖动\n    handleMouseUp () {\n      this.dragColumn(this.dragState)\n      // 初始化拖动状态\n      this.dragState = {\n        start: -10,\n        end: -10,\n        dragging: false,\n        direction: undefined\n      }\n    　document.removeEventListener('mouseup', this.handleMouseUp);\n    },\n\n    // 拖动中\n    handleMouseMove (e, column) {\n      if (this.dragState.dragging) {\n        let index = parseInt(column.columnKey) // 记录起始列\n        if (index - this.dragState.start !== 0) {\n          this.dragState.direction = index - this.dragState.start < 0 ? 'left' : 'right' // 判断拖动方向\n          this.dragState.end = parseInt(column.columnKey)\n        } else {\n          this.dragState.direction = undefined\n        }\n      } else {\n        return false\n      }\n    },\n\n    // 拖动易位\n    dragColumn ({start, end, direction}) {\n      let tempData = []\n      let left = direction === 'left'\n      let min = left ? end : start - 1\n      let max = left ? start + 1 : end\n      for (let i = 0; i < this.tableHeader.length; i++) {\n        if (i === end) {\n          tempData.push(this.tableHeader[start])\n        } else if (i > min && i < max) {\n          tempData.push(this.tableHeader[ left ? i - 1 : i + 1 ])\n        } else {\n          tempData.push(this.tableHeader[i])\n        }\n      }\n      this.tableHeader = tempData\n    },\n\n    headerCellClassName ({column,columnIndex},any) {\n        let active = columnIndex - 0 === this.dragState.end ? `darg_active_${this.dragState.direction}` : ''\n        let start = columnIndex - 0 === this.dragState.start ? `darg_start` : ''\n        return `${active} ${start}`\n    },\n\n    cellClassName ({column,columnIndex},any) {\n        return (columnIndex - 0 === this.dragState.start ? `darg_start` : '')\n    }\n  },\n  data() {\n    return {\n      tooltipEffect:\"dark\",\n      tableHeader: this.header,\n      dragState: {\n        start: -9, // 起始元素的 index\n        end: -9, // 移动鼠标时所覆盖的元素 index\n        dragging: false, // 是否正在拖动\n        direction: undefined // 拖动方向\n      },\n      filterText: ''\n    }\n  },\n  created:function(){\n\n    \n  },\n  mounted () {\n  }\n}\n</script>\n<style>\n   .el-table .darg_start {\n     background-color: #f3f3f3; \n    }\n</style>\n<style  lang=\"scss\">\n  .w-table {\n  　.el-table .darg_start {\n     background-color: #f3f3f3 !important; \n    }\n    .el-table th {\n      padding: 0;\n      .virtual{\n        position: fixed;\n        display: block;\n        width: 0;\n        height: 0;\n        margin-left: -10px;\n        background: none;\n        border: none;\n      }\n    &.darg_active_left {\n      .virtual {\n        border-left: 2px dotted #666;\n        z-index: 99;\n      }\n    }\n    &.darg_active_right {\n      .virtual {\n        border-right: 2px dotted #666;\nz-index: 99;\n      }\n    }\n  }\n  .thead-cell {\n    padding: 0;\n    display: inline-flex;\n    flex-direction: column;\n    align-items: left;\n    cursor: pointer;\n    overflow: initial;\n    &:before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n    }\n  }\n  &.w-table_moving {\n    .el-table th .thead-cell{\n      cursor: move !important;\n    }\n    .el-table__fixed {\n      cursor: not-allowed;\n    }\n  }\n}\n</style>","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.dashboard-container{min-width:1000px;}\n.dateabslute{position:absolute; right:170px; top:15px; z-index:10;}\n.dateTab{position:absolute; right:10px; top:15px; z-index:10;}\n.zl-icon{ display:block; width:15px; height:15px; background:url(\"../../assets/images/zl-icon.png\"); background-size:100%; float:left; margin:17px 5px 0 0;}\n\n.ys-icon{ display:block; width:15px; height:15px; background:url(\"../../assets/images/ys-icon.png\"); background-size:100%; float:left; margin:17px 5px 0 0;}\n\n.fx-icon{ display:block; width:15px; height:15px; background:url(\"../../assets/images/fx-icon.png\"); background-size:100%; float:left; margin:17px 5px 0 0;}\n\n.ph-icon{ display:block; width:15px; height:15px; background:url(\"../../assets/images/ph-icon.png\"); background-size:100%; float:left; margin:17px 5px 0 0;}\n\n.sp-icon{ display:block; width:15px; height:15px; background:url(\"../../assets/images/sp-icon.png\"); background-size:100%; float:left; margin:17px 5px 0 0;}\n\n\n.realTime{ position :absolute; background:rgba(255,255,255,0.5);  border-radius:3px; padding:2px 4px; font-size:12px; z-index:1; right:-10px;; top:-13px;}\n.border-rig{border-right:1px solid #ddd}\n.bcg{background:#fff; border-radius:3px; padding:0 0px 20px 0px; box-shadow:0 2px 12px 0 rgba(0, 0, 0, 0.1)}\n.block-title{ background:#fff; border-radius:3px; border-bottom-left-radius:0px;border-bottom-right-radius:0px; font-size:14px; line-height:50px; color:#333; font-weight:normal; padding-left:10px; }\n.block-lv{ background:#fff}\n.block-bai{ background:#fff; color:#333;}\n.num-Div{text-align:center; color:#fff; position:relative; font-size:35px;}\n.block-Title-Div{text-align:center; color:#fff; font-size:14px; margin-top:10px;}\n\n.num-Div-1{text-align:center; color:#333; font-size:30px; margin-top:30px;background:url(\"../../assets/images/minus.jpg\") no-repeat center bottom; background-size:50px 1px; padding-bottom:10px; }\n.block-Title-Div-1{text-align:center; color:#999; font-size:14px; margin-top:10px;}\n.title{ font-size:18px; }\n.dashboard {\n  &-container {\n    margin: 30px;\n  }\n  &-text {\n    font-size: 30px;\n    line-height: 46px;\n  }\n}\n"]}